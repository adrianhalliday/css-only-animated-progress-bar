/* Progress Bar Styles */

.progress-bar {

	&--container {
		position: relative;
		width: 100%;
		height: 10px;
		margin-bottom: 7rem;
		background: $colour-bar-background;
		background: linear-gradient(90deg, $colour-bar-background 70%, $colour-bar-background-2 70%);
	
		@media (min-width: $md) {
			background: linear-gradient(90deg, $colour-bar-background 80%, $colour-bar-background-2 80%);
		}
	}

	&--part-1 {
		position: absolute;
		left: 0;
		width: 70%;

		@media (min-width: $md) {
			width: 80%;
		}

		.progress-bar--label {
			min-width: 5ch;
			text-align: right;
		}

		&[style*="percentage-completed: 100"]+.progress-bar--registration-container {
			
			.progress-bar--label {
				/* 
				Accounts for Part 1 Label being too close to Part 2 label.
				==========================================================
				If Part 1 is 100%, shift just the label over by up to 20px.

				Best CSS would be:
				padding-left: Max(calc(20px - (var(--percentage-completed) * 1%)), 0px)
				
				However, SASS correctly (in most cases) removes units from zero values since
				they are not needed by browsers **most of the time**, so the output will be:
				padding-left: Max(calc(20px - (var(--percentage-completed) * 1%)), 0) <- note missing 'px' in final value
				
				This will fail in browser, because CSS min & max require zero values to 
				have units specified. To account for this, we set the min value to 1px
				then adjust for that with a negative margin of 1px on the inner elements.
				*/

				padding-left: Max(calc(20px - (var(--percentage-completed) * 1%)), 1px);

				>* {
					margin-left: -1px;
				}
			}
		}
	}

	&--part-2 {
		position: absolute;
		right: 0;
		width: 30%;

		@media (min-width: $md) {
			width: 20%;
		}

		.progress-bar--fill {
			animation-delay: 1s;
		}
		.progress-bar--label {
			min-width: 11ch;
			animation: part-2-bar-label .8s ease 1s forwards;
		}
	}

	&--fill {
		position: absolute;
		top: 0;
		left: 0;
		height: 10px;
		width: 0;
		background-color: $colour-bar-fill;
		animation: progress-bar .8s ease .3s forwards;

		// Indicator arrow above progress label
		&:after {
			content: '';
			display: block;
			position: absolute;
			width: 0;
			height: 0;
			top: 26px;
			right: -.6rem;
			border-left: .6rem solid transparent;
			border-right: .6rem solid transparent;
			border-bottom: .7rem solid $colour-indicator;
		}
	}

	&--label {
		position: absolute;
		right: 0;
		left: 0;
		top: 35px;
		width: 0;
		text-align: left;
		font-size: 1.4rem;
		color: $colour-label;
		animation: progress-bar .8s ease .3s forwards;
	}

	&--percentage {
		counter-reset: percentage var(--percentage-completed);

		&:before {
			content: counter(percentage);
		}
	}
}

@keyframes progress-bar {
	0% {
		width: 0
	}

	100% {
		width: calc(1% * var(--percentage-completed))
	}
}

@keyframes part-2-bar-label {
	0% {
		left: 0
	}

	100% {
		left: Min(calc(100% - 11ch), calc(1% * var(--percentage-completed)))
	}
}

/* 
@property --num {
	syntax: '<integer>';
	initial-value: 0;
	inherits: false;
}

div {
	transition: --num 1s;
	counter-reset: num var(--num);
}

div:hover {
	--num: 10000;
}

div::after {
	content: counter(num);
}
*/